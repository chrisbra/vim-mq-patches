There is an inconsistency when using dit for those two cases:

1)
<b>
foobar
</b>

2)
<b>
foobar
   </b>

Using 'dit' on that text leaves us with:
1)         2)
<b>        <b></b>
</b>

Therefore this patch tries to remove this inconsistency by not
moving the cursor overt the linebreak and adding a test case.

# HG changeset patch
# Parent 6c6f8de3cb5a85a184e4f67f21baaa49dab464c6

diff --git a/src/normal.c b/src/normal.c
--- a/src/normal.c
+++ b/src/normal.c
@@ -9187,6 +9187,13 @@ nv_object(cap)
 		flag = current_block(cap->oap, cap->count1, include, '<', '>');
 		break;
 	case 't': /* "at" = a tag block (xml and html) */
+		/* do not adjust oap->end in do_pending_operator()
+		 * otherwise there are different results for 'dit'
+		 * (note leading whitespace in last line)
+		 * 1) <b>      2) <b>
+		 *    foobar      foobar
+		 *    </b>            </b> */
+		cap->retval |= CA_NO_ADJ_OP_END;
 		flag = current_tagblock(cap->oap, cap->count1, include);
 		break;
 	case 'p': /* "ap" = a paragraph */
diff --git a/src/search.c b/src/search.c
--- a/src/search.c
+++ b/src/search.c
@@ -3781,6 +3781,7 @@ current_tagblock(oap, count_arg, include
     int		do_include = include;
     int		save_p_ws = p_ws;
     int		retval = FAIL;
+    int		is_inclusive = TRUE;
 
     p_ws = FALSE;
 
@@ -3896,7 +3897,16 @@ again:
     else
     {
 	/* Exclude the '<' of the end tag. */
-	if (*ml_get_cursor() == '<')
+	char_u *c = ml_get_cursor();
+	/* if closing tag is on new line,
+	 * do not decrement cursor, but make
+	 * operation exclusive, so that the linefeed
+	 * will be selected */
+	if (*c == '<' && !VIsual_active
+		&& curwin->w_cursor.col == 0)
+	    /* do not decrement cursor */
+	    is_inclusive = FALSE;
+	else if (*c == '<')
 	    dec_cursor();
     }
     end_pos = curwin->w_cursor;
@@ -3950,7 +3960,7 @@ again:
 	    oap->inclusive = FALSE;
 	}
 	else
-	    oap->inclusive = TRUE;
+	    oap->inclusive = is_inclusive;
     }
     retval = OK;
 
diff --git a/src/testdir/test53.in b/src/testdir/test53.in
--- a/src/testdir/test53.in
+++ b/src/testdir/test53.in
@@ -23,6 +23,7 @@ jfXdit
 0fXdit
 fXdat
 0fXdat
+dit
 :"
 :put =matchstr(\"abcd\", \".\", 0, 2) " b
 :put =matchstr(\"abcd\", \"..\", 0, 2) " bc
@@ -97,6 +98,9 @@ voo "nah" sdf " asdf" sdf " sdf" sd
 -<b>asdX<i>a<i />sdf</i>asdf</b>-
 -<b>asdf<i>Xasdf</i>asdf</b>-
 -<b>asdX<i>as<b />df</i>asdf</b>-
+-<b>
+innertext object
+</b>
 </begin>
 SEARCH:
 foobar
diff --git a/src/testdir/test53.ok b/src/testdir/test53.ok
--- a/src/testdir/test53.ok
+++ b/src/testdir/test53.ok
@@ -11,6 +11,7 @@ voo "zzzzzzzzzzzzzzzzzzzzzzzzzzzzsd
 -<b></b>-
 -<b>asdfasdf</b>-
 --
+-<b></b>
 </begin>
 b
 bc
