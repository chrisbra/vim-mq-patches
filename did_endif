# HG changeset patch
# Parent a71f64e9cd95c4d9e8f651b8ccdb41ccd0dac888

diff --git a/src/ex_docmd.c b/src/ex_docmd.c
--- a/src/ex_docmd.c
+++ b/src/ex_docmd.c
@@ -1537,6 +1537,8 @@
 #endif
 
     --call_depth;
+    if (did_endif)
+	did_endif = FALSE;
     return retval;
 }
 
diff --git a/src/testdir/test49.ok b/src/testdir/test49.ok
--- a/src/testdir/test49.ok
+++ b/src/testdir/test49.ok
@@ -87,8 +87,12 @@
 *** Test  85: OK (198689)
 --- Test  86: No Crash for vimgrep on BufUnload
 *** Test  86: OK (0)
---- Test  87: All tests were run with throwing exceptions on error.
+--- Test  87: 
+	      foobar
+	      foobar
+*** Test  87: OK (0)
+--- Test  88: All tests were run with throwing exceptions on error.
 	      The $VIMNOERRTHROW control is not configured.
---- Test  87: All tests were run with throwing exceptions on interrupt.
+--- Test  88: All tests were run with throwing exceptions on interrupt.
 	      The $VIMNOINTTHROW control is not configured.
-*** Test  87: OK (50443995)
+*** Test  88: OK (50443995)
diff --git a/src/testdir/test49.vim b/src/testdir/test49.vim
--- a/src/testdir/test49.vim
+++ b/src/testdir/test49.vim
@@ -9624,7 +9624,30 @@
 Xcheck 0 
 
 "-------------------------------------------------------------------------------
-" Test 87:  $VIMNOERRTHROW and $VIMNOINTTHROW support			    {{{1
+" Test 87   echo not working						    {{{1
+"
+"	    did_endif is not reset properly
+"-------------------------------------------------------------------------------
+
+fun! F()
+    call input("OK? ")
+    if 1
+	echo "foobar\nfoobar"
+    endif
+endfu
+nnoremap <silent> f :call F()<cr>
+
+redir =>a 
+exe "norm f\<cr>" 
+redir END
+delfunction F
+nunmap f
+
+Xout  a
+Xcheck 0 
+
+"-------------------------------------------------------------------------------
+" Test 88:  $VIMNOERRTHROW and $VIMNOINTTHROW support			    {{{1
 "
 "	    It is possible to configure Vim for throwing exceptions on error
 "	    or interrupt, controlled by variables $VIMNOERRTHROW and
