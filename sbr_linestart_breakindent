# HG changeset patch
# Parent aaebf72d1dee9622a6e43cfccd549bf2fe5f2dde

Put the 'sbr' setting at the start of the screen line, not after the breakindent.

E.g. the original patch does this:

    foobar foobar foobar
    ..foobar foobar
    ..foobar foobar

This patch does it differently

    foobar foobar foobar
..  foobar foobar
..  foobar foobar

(.. is the showbreak value)

diff --git a/src/misc1.c b/src/misc1.c
--- a/src/misc1.c
+++ b/src/misc1.c
@@ -495,9 +495,9 @@ get_breakindent_win(wp, lnum)
 						? number_width(wp) : 0);
 
     bri = get_indent_buf(wp->w_buffer, lnum ? lnum : wp->w_cursor.lnum) +
-	wp->w_p_brishift;
-	/* minus the length of the showbreak string
-	 - (*p_sbr == NUL ? 0 : vim_strsize(p_sbr)); */
+	wp->w_p_brishift
+	/* minus the length of the showbreak string */
+	 - (*p_sbr == NUL ? 0 : vim_strsize(p_sbr));
 
     /* Add offset for number column, if 'n' is in 'cpoptions' */
     bri += win_col_off2(wp);
diff --git a/src/screen.c b/src/screen.c
--- a/src/screen.c
+++ b/src/screen.c
@@ -2959,17 +2959,17 @@ win_line(wp, lnum, startrow, endrow, noc
 # define WL_SIGN	WL_FOLD		/* column for signs */
 #endif
 #define WL_NR		WL_SIGN + 1	/* line number */
+#if defined(FEAT_LINEBREAK) || defined(FEAT_DIFF)
+# define WL_SBR		WL_NR + 1	/* 'showbreak' or 'diff' */
+#else
+# define WL_SBR		WL_NR
+#endif
 #ifdef FEAT_LINEBREAK
-# define WL_BRI		WL_NR + 1	/* 'breakindent' */
+# define WL_BRI		WL_SBR + 1	/* 'breakindent' */
 #else
-# define WL_BRI		WL_NR
-#endif
-#if defined(FEAT_LINEBREAK) || defined(FEAT_DIFF)
-# define WL_SBR		WL_BRI + 1	/* 'showbreak' or 'diff' */
-#else
-# define WL_SBR		WL_BRI
-#endif
-#define WL_LINE		WL_SBR + 1	/* text in the line */
+# define WL_BRI		WL_SBR
+#endif
+#define WL_LINE		WL_BRI + 1	/* text in the line */
     int		draw_state = WL_START;	/* what to draw next */
 #if defined(FEAT_XIM) && defined(FEAT_GUI_GTK)
     int		feedback_col = 0;
@@ -3673,42 +3673,6 @@ win_line(wp, lnum, startrow, endrow, noc
 		}
 	    }
 
-#ifdef FEAT_LINEBREAK
-	    /* draw 'breakindent': indent wrapped text accordingly */
-	    if (draw_state == WL_BRI -1 && n_extra == 0)
-	    {
-		draw_state = WL_BRI;
-# ifdef FEAT_DIFF
-		/* FIXME: handle (filler_todo > 0): or modify showbreak so that
-		 * ---- lines are shorter by the amount needed? */
-#endif
-		/* FIXME: what is startrow? Don't we need it as well?? */
-		if (wp->w_p_bri && n_extra == 0 && row != startrow
-#ifdef FEAT_DIFF
-			&& filler_lines == 0
-#endif
-		   )
-		{
-		    char_attr = 0; /* was: hl_attr(HLF_AT); */
-#ifdef FEAT_DIFF
-		    if (diff_hlf != (hlf_T)0)
-			char_attr = hl_attr(diff_hlf);
-#endif
-		    p_extra = NUL;
-		    c_extra = ' ';
-		    n_extra = get_breakindent_win(wp, lnum);
-		    /* FIXME: why do we need to adjust vcol if showbreak does not??
-		     * vcol += n_extra;
-		     * FIXME: is this relevant here? copied shamelessly from showbreak
-		     *
-		     * Correct end of highlighted area for 'breakindent',
-		     * required when 'linebreak' is also set. */
-		    if (tocol == vcol)
-			tocol += n_extra;
-		}
-	    }
-#endif
-
 #if defined(FEAT_LINEBREAK) || defined(FEAT_DIFF)
 	    if (draw_state == WL_SBR - 1 && n_extra == 0)
 	    {
@@ -3753,6 +3717,38 @@ win_line(wp, lnum, startrow, endrow, noc
 	    }
 #endif
 
+#ifdef FEAT_LINEBREAK
+	    /* draw 'breakindent': indent wrapped text accordingly */
+	    if (draw_state == WL_BRI -1 && n_extra == 0){
+		draw_state = WL_BRI;
+# ifdef FEAT_DIFF
+		/* FIXME: handle (filler_todo > 0): or modify showbreak so that ----
+		 * lines are shorter by the amount needed? */
+		if (diff_hlf != (hlf_T)0)
+		    char_attr = hl_attr(diff_hlf);
+		else
+# endif
+		    char_attr = 0; /* was: hl_attr(HLF_AT); */
+		if (wp->w_p_bri && row != startrow){ /* FIXME: what is startrow? Don't we need it as well?? */
+		    p_extra = NUL;
+		    c_extra = ' ';
+		    n_extra = get_breakindent_win(wp, lnum);
+		    /* FIXME: why do we need to adjust vcol if showbreak does not?? */
+		    // vcol += n_extra;
+		    /* FIXME: is this relevant here? copied shamelessly from showbreak */
+		    /* Correct end of highlighted area for 'breakindent',
+		     * required when 'linebreak' is also set. */
+		    if (tocol == vcol)
+			tocol += n_extra;
+#ifdef FEAT_SYN_HL
+		    /* combine 'breakindent' with 'cursorline' */
+		    if (wp->w_p_cul && lnum == wp->w_cursor.lnum)
+			char_attr = hl_attr(HLF_CUL);
+#endif
+		}
+	    }
+#endif
+
 	    if (draw_state == WL_LINE - 1 && n_extra == 0)
 	    {
 		draw_state = WL_LINE;
