# HG changeset patch
# Parent 5e7f27ddb296a92d16e9c43e9cff1e051210251c

diff --git a/src/gui_gtk_x11.c b/src/gui_gtk_x11.c
--- a/src/gui_gtk_x11.c
+++ b/src/gui_gtk_x11.c
@@ -5967,25 +5967,42 @@ gui_mch_drawsign(int row, int col, int t
 	 * tiny differences in font size.
 	 */
 	need_scale = (width > SIGN_WIDTH + 2
-		      || height > SIGN_HEIGHT + 2
+		      || height != SIGN_HEIGHT /* might differ because of linespaceing */
 		      || (width < 3 * SIGN_WIDTH / 4
 			  && height < 3 * SIGN_HEIGHT / 4));
 	if (need_scale)
 	{
 	    double aspect;
+	    int	    w = width;
+	    int	    h = height;
 
 	    /* Keep the original aspect ratio */
 	    aspect = (double)height / (double)width;
 	    width  = (double)SIGN_WIDTH * SIGN_ASPECT / aspect;
 	    width  = MIN(width, SIGN_WIDTH);
-	    height = (double)width * aspect;
-
-	    /* This doesn't seem to be worth caching, and doing so
-	     * would complicate the code quite a bit. */
-	    sign = gdk_pixbuf_scale_simple(sign, width, height,
-					   GDK_INTERP_BILINEAR);
-	    if (sign == NULL)
-		return; /* out of memory */
+	    if (((double)(MAX(height, SIGN_HEIGHT)) /
+		 (double)(MIN(height, SIGN_HEIGHT))) < 1.15)
+	    {
+		/* allow to change the aspect ratio by at most 15% so the
+		 * lines will get filled completly */
+		height  = (double)SIGN_HEIGHT * SIGN_ASPECT / aspect;
+		height  = MIN(height, SIGN_HEIGHT);
+	    }
+	    else
+		height = (double)width * aspect;
+
+	    if (w != width || h != height) /* no change in dimensions */
+	    {
+		/* This doesn't seem to be worth caching, and doing so
+		* would complicate the code quite a bit. */
+		sign = gdk_pixbuf_scale_simple(sign, width, height,
+					    GDK_INTERP_BILINEAR);
+		if (sign == NULL)
+		    return; /* out of memory */
+	    }
+	    else
+		/* don't decrease reference counter (below) */
+		need_scale = FALSE;
 	}
 
 	/* The origin is the upper-left corner of the pixmap.  Therefore
