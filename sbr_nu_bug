TODO: Does not seem to work yet?

# HG changeset patch
# Parent ba13e010a6a2827afc5a9ec40ea23e3512487d56

diff --git a/src/screen.c b/src/screen.c
--- a/src/screen.c
+++ b/src/screen.c
@@ -3367,10 +3367,26 @@ win_line(wp, lnum, startrow, endrow, noc
 #ifdef FEAT_MBYTE
 	char_u	*prev_ptr = ptr;
 #endif
+	int	add_sbr = 0;
 	while (vcol < v && *ptr != NUL)
 	{
 	    c = win_lbr_chartabsize(wp, line, ptr, (colnr_T)vcol, NULL);
 	    vcol += c;
+#ifdef FEAT_LINEBREAK
+	    if (vcol >= v && wp->w_p_wrap && draw_state < WL_NR &&
+		    (wp->w_p_nu  || wp->w_p_rnu) &&
+		    *p_sbr != NUL && (vim_strchr(p_cpo, CPO_NUMCOL) != NULL))
+	    {
+		add_sbr =
+#ifdef FEAT_MBYTE
+		MB_CHARLEN(p_sbr);
+#else
+		STRLEN(p_sbr);
+#endif
+		vcol += add_sbr;
+		c    += add_sbr;
+	    }
+#endif
 #ifdef FEAT_MBYTE
 	    prev_ptr = ptr;
 #endif
@@ -3398,7 +3414,7 @@ win_line(wp, lnum, startrow, endrow, noc
 
 	/* Handle a character that's not completely on the screen: Put ptr at
 	 * that character but skip the first few screen characters. */
-	if (vcol > v)
+	if (vcol > v || (vcol == v && add_sbr))
 	{
 	    vcol -= c;
 #ifdef FEAT_MBYTE
@@ -3407,6 +3423,8 @@ win_line(wp, lnum, startrow, endrow, noc
 	    --ptr;
 #endif
 	    n_skip = v - vcol;
+	    if (add_sbr && number_width(wp) > add_sbr)
+		n_skip += add_sbr;
 	}
 
 	/*
@@ -3419,8 +3437,9 @@ win_line(wp, lnum, startrow, endrow, noc
 	    fromcol = vcol;
 
 #ifdef FEAT_LINEBREAK
-	/* When w_skipcol is non-zero, first line needs 'showbreak' */
-	if (wp->w_p_wrap)
+	/* When w_skipcol is non-zero, first line needs 'showbreak'
+	 * (but only, if the line is not empty */
+	if (wp->w_p_wrap && *ptr != NUL)
 	    need_showbreak = TRUE;
 #endif
 #ifdef FEAT_SPELL
diff --git a/src/testdir/test_listlbr.in b/src/testdir/test_listlbr.in
--- a/src/testdir/test_listlbr.in
+++ b/src/testdir/test_listlbr.in
@@ -74,6 +74,13 @@ Golong line: 40afoobar aTARGET at end
 :let g:test ="Test 8: set linebreak with visual char mode and changing block"
 :$put =g:test
 Go1111-1111-1111-11-1111-1111-11110f-lv3lc2222bgj.
+:set nocp cpo&vim cpo+=n numberwidth=4 nu sbr=>
+:let g:test ="Test 9: set nu sbr=> with overlong line"
+:let line=repeat('a', 20*10-5).'bc'
+:nnoremap <silent> GG :$put =nr2char(screenchar(screenrow(),screencol()))<cr>
+:$put =line
+$GG
+:unmap GG
 :%w! test.out
 :qa!
 ENDTEST
diff --git a/src/testdir/test_listlbr.ok b/src/testdir/test_listlbr.ok
--- a/src/testdir/test_listlbr.ok
+++ b/src/testdir/test_listlbr.ok
@@ -41,3 +41,5 @@ Test 7: set linebreak with visual block 
 long line: foobar foobar foobar foobar foobar foobar foobar foobar foobar foobar foobar foobar foobar foobar foobar foobar foobar foobar foobar foobar foobar foobar foobar foobar foobar foobar foobar foobar foobar foobar foobar foobar foobar foobar foobar foobar foobar foobar foobar foobar TARGETx at end
 Test 8: set linebreak with visual char mode and changing block
 1111-2222-1111-11-1111-2222-1111
+aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaabc
+c
